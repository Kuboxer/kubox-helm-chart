{{- range $serviceName, $config := .Values.services }}
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ $config.name }}
  namespace: {{ $.Values.global.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ $config.name }}
  template:
    metadata:
      labels:
        app: {{ $config.name }}
      annotations:
        proxy.istio.io/config: '{"holdApplicationUntilProxyStarts": true}'
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        sidecar.istio.io/proxyCPU: "200m"
        sidecar.istio.io/proxyMemory: "256Mi"
    spec:
      serviceAccountName: {{ $.Values.global.serviceAccount }}
      containers:
      - name: {{ $config.name }}
        image: {{ $.Values.global.imageRegistry }}/{{ $config.image.repository }}:{{ $config.image.tag }}
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            export DB_HOST=$(cat /mnt/secrets/kubox-common-db-host)
            export DB_PORT=$(cat /mnt/secrets/kubox-common-db-port)
            export DB_USERNAME=$(cat /mnt/secrets/kubox-common-db-username)
            export DB_PASSWORD=$(cat /mnt/secrets/kubox-common-db-password)
            export REDIS_HOST=$(cat /mnt/secrets/kubox-common-redis-host)
            export REDIS_PORT=$(cat /mnt/secrets/kubox-common-redis-port)
            export REDIS_SSL_ENABLED=$(cat /mnt/secrets/kubox-common-redis-ssl-enabled)
            export JWT_SECRET_KEY=$(cat /mnt/secrets/kubox-common-jwt-secret)
            export JWT_EXPIRATION=$(cat /mnt/secrets/kubox-common-jwt-expiration)
            export CORS_ALLOWED_ORIGINS=$(cat /mnt/secrets/kubox-common-cors-origins)
            export CORS_ALLOWED_METHODS=$(cat /mnt/secrets/kubox-common-cors-methods)
            export CORS_ALLOWED_HEADERS=$(cat /mnt/secrets/kubox-common-cors-headers)
            export LOG_LEVEL=$(cat /mnt/secrets/kubox-common-log-level)
            export AWS_DEFAULT_REGION=$(cat /mnt/secrets/kubox-common-aws-region)
            export BOOTPAY_API_URL=$(cat /mnt/secrets/kubox-bootpay-api-url)
            export BOOTPAY_APPLICATION_ID=$(cat /mnt/secrets/kubox-bootpay-app-id)
            export BOOTPAY_PRIVATE_KEY=$(cat /mnt/secrets/kubox-bootpay-private-key)
            java -jar /app/app.jar
        ports:
        - containerPort: {{ $config.port }}
          name: http
        {{- if $config.secrets }}
        envFrom:
        {{- range $config.secrets }}
        - secretRef:
            name: {{ . }}
        {{- end }}
        {{- end }}
        {{- if $config.env }}
        env:
        {{- range $key, $value := $config.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- if $.Values.secretsStore.enabled }}
        volumeMounts:
        - name: secrets-store
          mountPath: {{ $.Values.secretsStore.mountPath }}
          readOnly: true
        {{- end }}
        startupProbe:
          httpGet:
            path: {{ $.Values.healthCheck.paths.startup }}
            port: {{ $config.port }}
          periodSeconds: {{ $.Values.healthCheck.startupProbe.periodSeconds }}
          failureThreshold: {{ $.Values.healthCheck.startupProbe.failureThreshold }}
          timeoutSeconds: {{ $.Values.healthCheck.startupProbe.timeoutSeconds }}
          initialDelaySeconds: {{ $.Values.healthCheck.startupProbe.initialDelaySeconds }}
        livenessProbe:
          httpGet:
            path: {{ $.Values.healthCheck.paths.liveness }}
            port: {{ $config.port }}
          periodSeconds: {{ $.Values.healthCheck.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ $.Values.healthCheck.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ $.Values.healthCheck.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ $.Values.healthCheck.paths.readiness }}
            port: {{ $config.port }}
          periodSeconds: {{ $.Values.healthCheck.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ $.Values.healthCheck.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ $.Values.healthCheck.readinessProbe.failureThreshold }}
        resources:
          requests:
            memory: {{ $.Values.resources.requests.memory }}
            cpu: {{ $.Values.resources.requests.cpu }}
          limits:
            memory: {{ $.Values.resources.limits.memory }}
            cpu: {{ $.Values.resources.limits.cpu }}
      {{- if $.Values.secretsStore.enabled }}
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ $.Values.secretsStore.secretProviderClass }}
      {{- end }}

  strategy:
    blueGreen:
      activeService: {{ $config.serviceName }}
      previewService: {{ $config.serviceName }}-preview
      autoPromotionEnabled: true
      autoPromotionSeconds: 60
{{- end }}
